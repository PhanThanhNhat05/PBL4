const mongoose = require('mongoose');
require('dotenv').config({ path: '../config.env' });

async function testConnection() {
  try {
    console.log('üîå Testing MongoDB connection...');
    console.log(`üìç URI: ${process.env.MONGODB_URI || 'mongodb://localhost:27017/heart-rate-monitor'}`);
    
    
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/heart-rate-monitor', {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
    
    console.log('‚úÖ MongoDB connection successful!');
    
    
    const db = mongoose.connection.db;
    const dbName = db.databaseName;
    console.log(`üìä Database: ${dbName}`);
    
    
    const collections = await db.listCollections().toArray();
    console.log(`üìÅ Collections found: ${collections.length}`);
    
    for (const collection of collections) {
      const count = await db.collection(collection.name).countDocuments();
      console.log(`  ‚Ä¢ ${collection.name}: ${count} documents`);
    }
    
    
    const pingResult = await db.admin().ping();
    console.log(`üèì Ping result: ${JSON.stringify(pingResult)}`);
    
    console.log('\n‚úÖ All tests passed! Database is ready to use.');
    
  } catch (error) {
    console.error('‚ùå Connection test failed:', error.message);
    console.error('üí° Please check:');
    console.error('  ‚Ä¢ MongoDB server is running');
    console.error('  ‚Ä¢ Connection string is correct');
    console.error('  ‚Ä¢ Network connectivity');
    console.error('  ‚Ä¢ Authentication credentials');
  } finally {
    await mongoose.connection.close();
    console.log('üîå Connection closed');
  }
}


if (require.main === module) {
  testConnection();
}

module.exports = testConnection;
